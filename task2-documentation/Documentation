# Todo API - –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

## –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
1. [–û–±–∑–æ—Ä](#–æ–±–∑–æ—Ä)
2. [–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç](#–±—ã—Å—Ç—Ä—ã–π-—Å—Ç–∞—Ä—Ç)
3. [API –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](#api-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è)
4. [–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è](#–ø—Ä–∏–º–µ—Ä—ã-–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
5. [–£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫](#—É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ-–Ω–µ–ø–æ–ª–∞–¥–æ–∫)
6. [–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞](#—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞)

## –û–±–∑–æ—Ä

Todo API - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ RESTful API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –Ω–∞ FastAPI. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä CRUD –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–¥–∞—á–∞–º–∏, –≤–∫–ª—é—á–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é, –ø–æ–∏—Å–∫ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.

### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ, —á—Ç–µ–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á
- üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –æ–ø–∏—Å–∞–Ω–∏—é
- üè∑Ô∏è –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
- üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á
- üìñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API (Swagger/OpenAPI)
- ‚ú® –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é Pydantic
- üöÄ –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä—è FastAPI

### –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫:
- **Framework**: FastAPI 0.104.1
- **–í–∞–ª–∏–¥–∞—Ü–∏—è**: Pydantic 2.5.0
- **ASGI Server**: Uvicorn
- **–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ**: pytest
- **Python**: 3.11+

## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–∏—Å—Ç–µ–º–µ
- Python 3.11 –∏–ª–∏ –≤—ã—à–µ
- pip (–º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–∫–µ—Ç–æ–≤ Python)

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞

1. **–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è**
```bash
git clone <repository-url>
cd todo-api
```

2. **–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è**
```bash
python -m venv venv
source venv/bin/activate  # –ù–∞ Windows: venv\Scripts\activate
```

3. **–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π**
```bash
pip install -r requirements.txt
```

### –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

#### –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
```bash
uvicorn main:app --reload --host 0.0.0.0 --port 8000
```

#### –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º
```bash
uvicorn main:app --host 0.0.0.0 --port 8000 --workers 4
```

#### –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Makefile
```bash
make dev  # –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
```

### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏

–ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:
- **–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ**: http://localhost:8000
- **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API**: http://localhost:8000/docs
- **–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è**: http://localhost:8000/health

## API –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

### –ë–∞–∑–æ–≤—ã–π URL
```
http://localhost:8000/api
```

### –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
–í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ API –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –í—Å–µ endpoints –¥–æ—Å—Ç—É–ø–Ω—ã –ø—É–±–ª–∏—á–Ω–æ.

### –§–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö
- **–ó–∞–ø—Ä–æ—Å—ã**: JSON
- **–û—Ç–≤–µ—Ç—ã**: JSON
- **–ö–æ–¥–∏—Ä–æ–≤–∫–∞**: UTF-8
- **–§–æ—Ä–º–∞—Ç –¥–∞—Ç**: ISO 8601 (–Ω–∞–ø—Ä–∏–º–µ—Ä: "2023-12-01T10:00:00Z")

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤
–í—Å–µ —É—Å–ø–µ—à–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã API —Å–ª–µ–¥—É—é—Ç –µ–¥–∏–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ:

```json
{
  "success": true,
  "data": { ... } // –∏–ª–∏ –º–∞—Å—Å–∏–≤ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤
}
```

–î–ª—è —Å–ø–∏—Å–∫–æ–≤ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª–µ `count`:
```json
{
  "success": true,
  "data": [...],
  "count": 10
}
```

### –ö–æ–¥—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è HTTP
- `200 OK` - –£—Å–ø–µ—à–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
- `201 Created` - –†–µ—Å—É—Ä—Å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω
- `400 Bad Request` - –û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞
- `404 Not Found` - –†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω
- `422 Unprocessable Entity` - –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
- `500 Internal Server Error` - –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞

### –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö

#### Todo
```json
{
  "id": "string (UUID)",
  "title": "string (1-200 —Å–∏–º–≤–æ–ª–æ–≤)",
  "description": "string (0-1000 —Å–∏–º–≤–æ–ª–æ–≤, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
  "status": "pending" | "completed",
  "priority": "low" | "medium" | "high",
  "due_date": "string (ISO 8601, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
  "created_at": "string (ISO 8601)",
  "updated_at": "string (ISO 8601)"
}
```

#### TodoCreate
```json
{
  "title": "string (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, 1-200 —Å–∏–º–≤–æ–ª–æ–≤)",
  "description": "string (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, 0-1000 —Å–∏–º–≤–æ–ª–æ–≤)",
  "priority": "low" | "medium" | "high" (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: "medium"),
  "due_date": "string (ISO 8601, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
}
```

#### TodoUpdate
```json
{
  "title": "string (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, 1-200 —Å–∏–º–≤–æ–ª–æ–≤)",
  "description": "string (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, 0-1000 —Å–∏–º–≤–æ–ª–æ–≤)",
  "priority": "low" | "medium" | "high" (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ),
  "due_date": "string (ISO 8601, –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
}
```

### Endpoints

#### 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á
```http
GET /api/todos
```

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:**
- `status` (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): `pending` | `completed`
- `priority` (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): `low` | `medium` | `high`
- `search` (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): —Å—Ç—Ä–æ–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–∏
- `limit` (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π (1-100)
- `offset` (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): —Å–º–µ—â–µ–Ω–∏–µ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0)

**–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:**
```bash
curl "http://localhost:8000/api/todos?status=pending&priority=high&limit=10"
```

**–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:**
```json
{
  "success": true,
  "data": [
    {
      "id": "123e4567-e89b-12d3-a456-426614174000",
      "title": "–ó–∞–∫–æ–Ω—á–∏—Ç—å –æ—Ç—á—ë—Ç",
      "description": "–ö–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º",
      "status": "pending",
      "priority": "high",
      "due_date": "2023-12-31T23:59:59Z",
      "created_at": "2023-12-01T10:00:00Z",
      "updated_at": "2023-12-01T10:00:00Z"
    }
  ],
  "count": 1
}
```

#### 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –ø–æ ID
```http
GET /api/todos/{id}
```

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—É—Ç–∏:**
- `id`: UUID –∑–∞–¥–∞—á–∏

**–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:**
```bash
curl "http://localhost:8000/api/todos/123e4567-e89b-12d3-a456-426614174000"
```

#### 3. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
```http
POST /api/todos
```

**–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:**
```json
{
  "title": "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞",
  "description": "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏",
  "priority": "medium",
  "due_date": "2023-12-31T23:59:59Z"
}
```

**–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:**
```bash
curl -X POST "http://localhost:8000/api/todos" \
     -H "Content-Type: application/json" \
     -d '{"title": "–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã", "priority": "high"}'
```

#### 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
```http
PUT /api/todos/{id}
```

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—É—Ç–∏:**
- `id`: UUID –∑–∞–¥–∞—á–∏

**–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:**
```json
{
  "title": "–û–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
  "description": "–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
  "priority": "low"
}
```

#### 5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏
```http
PATCH /api/todos/{id}/status
```

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—É—Ç–∏:**
- `id`: UUID –∑–∞–¥–∞—á–∏

**–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:**
```json
{
  "status": "completed"
}
```

**–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:**
```bash
curl -X PATCH "http://localhost:8000/api/todos/123e4567-e89b-12d3-a456-426614174000/status" \
     -H "Content-Type: application/json" \
     -d '{"status": "completed"}'
```

#### 6. –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
```http
DELETE /api/todos/{id}
```

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—É—Ç–∏:**
- `id`: UUID –∑–∞–¥–∞—á–∏

**–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:**
```bash
curl -X DELETE "http://localhost:8000/api/todos/123e4567-e89b-12d3-a456-426614174000"
```

#### 7. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á
```http
DELETE /api/todos
```

**–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞:**
```bash
curl -X DELETE "http://localhost:8000/api/todos"
```

#### 8. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
```http
GET /api/stats
```

**–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:**
```json
{
  "success": true,
  "data": {
    "total_todos": 10,
    "completed": 3,
    "pending": 7,
    "overdue": 2,
    "priority_breakdown": {
      "low": 2,
      "medium": 5,
      "high": 3
    }
  }
}
```

### –°–ª—É–∂–µ–±–Ω—ã–µ endpoints

#### –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
```http
GET /health
```

**–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:**
```json
{
  "status": "healthy",
  "timestamp": "2023-12-01T10:00:00Z",
  "version": "1.0.0"
}
```

#### –ö–æ—Ä–Ω–µ–≤–æ–π endpoint
```http
GET /
```

## –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

### –°—Ü–µ–Ω–∞—Ä–∏–π 1: –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–µ–π

```bash
# 1. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
curl -X POST "http://localhost:8000/api/todos" \
     -H "Content-Type: application/json" \
     -d '{
       "title": "–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é",
       "description": "–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–≤–æ–º—É –ø—Ä–æ–µ–∫—Ç—É",
       "priority": "high",
       "due_date": "2023-12-15T17:00:00Z"
     }'

# –û—Ç–≤–µ—Ç: {"success": true, "data": {"id": "abc123...", ...}}

# 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏
curl "http://localhost:8000/api/todos/abc123..."

# 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ "–≤—ã–ø–æ–ª–Ω–µ–Ω–æ"
curl -X PATCH "http://localhost:8000/api/todos/abc123.../status" \
     -H "Content-Type: application/json" \
     -d '{"status": "completed"}'
```

### –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è

```bash
# –ü–æ–∏—Å–∫ –∑–∞–¥–∞—á —Å–æ —Å–ª–æ–≤–æ–º "–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è"
curl "http://localhost:8000/api/todos?search=–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è"

# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –≤—ã—Å–æ–∫–æ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
curl "http://localhost:8000/api/todos?status=pending&priority=high"

# –ü–∞–≥–∏–Ω–∞—Ü–∏—è: –ø–µ—Ä–≤—ã–µ 5 –∑–∞–¥–∞—á
curl "http://localhost:8000/api/todos?limit=5&offset=0"

# –°–ª–µ–¥—É—é—â–∏–µ 5 –∑–∞–¥–∞—á
curl "http://localhost:8000/api/todos?limit=5&offset=5"
```

### –°—Ü–µ–Ω–∞—Ä–∏–π 3: –†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π

```bash
# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
curl "http://localhost:8000/api/stats"

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
curl "http://localhost:8000/api/todos?status=pending" | jq '.count'
```

### –ü—Ä–∏–º–µ—Ä –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞ (Python)

```python
import requests
import json

class TodoClient:
    def __init__(self, base_url="http://localhost:8000"):
        self.base_url = base_url
        self.api_url = f"{base_url}/api"
    
    def create_todo(self, title, description="", priority="medium", due_date=None):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏"""
        data = {
            "title": title,
            "description": description,
            "priority": priority
        }
        if due_date:
            data["due_date"] = due_date
        
        response = requests.post(f"{self.api_url}/todos", json=data)
        response.raise_for_status()
        return response.json()["data"]
    
    def get_todos(self, status=None, priority=None, search=None):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π"""
        params = {}
        if status:
            params["status"] = status
        if priority:
            params["priority"] = priority
        if search:
            params["search"] = search
        
        response = requests.get(f"{self.api_url}/todos", params=params)
        response.raise_for_status()
        return response.json()["data"]
    
    def complete_todo(self, todo_id):
        """–û—Ç–º–µ—Ç–∫–∞ –∑–∞–¥–∞—á–∏ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π"""
        data = {"status": "completed"}
        response = requests.patch(f"{self.api_url}/todos/{todo_id}/status", json=data)
        response.raise_for_status()
        return response.json()["data"]

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
client = TodoClient()

# –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
todo = client.create_todo("–ò–∑—É—á–∏—Ç—å FastAPI", "–ü—Ä–æ–π—Ç–∏ —Ç—É—Ç–æ—Ä–∏–∞–ª –∏ —Å–æ–∑–¥–∞—Ç—å API", "high")
print(f"–°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞: {todo['id']}")

# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
pending_todos = client.get_todos(status="pending")
print(f"–ù–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á: {len(pending_todos)}")

# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
completed = client.complete_todo(todo["id"])
print(f"–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {completed['status']}")
```

### –ü—Ä–∏–º–µ—Ä –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞ (JavaScript)

```javascript
class TodoAPI {
    constructor(baseUrl = 'http://localhost:8000') {
        this.apiUrl = `${baseUrl}/api`;
    }

    async createTodo(todoData) {
        const response = await fetch(`${this.apiUrl}/todos`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(todoData)
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const result = await response.json();
        return result.data;
    }

    async getTodos(filters = {}) {
        const params = new URLSearchParams(filters);
        const response = await fetch(`${this.apiUrl}/todos?${params}`);
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const result = await response.json();
        return result.data;
    }

    async completeTodo(todoId) {
        const response = await fetch(`${this.apiUrl}/todos/${todoId}/status`, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ status: 'completed' })
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const result = await response.json();
        return result.data;
    }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
const api = new TodoAPI();

async function example() {
    try {
        // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        const newTodo = await api.createTodo({
            title: '–ò–∑—É—á–∏—Ç—å API',
            description: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é',
            priority: 'medium'
        });
        console.log('–°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞:', newTodo.id);

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á
        const todos = await api.getTodos({ status: 'pending' });
        console.log('–ù–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:', todos.length);

        // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
        const completed = await api.completeTodo(newTodo.id);
        console.log('–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏:', completed.status);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error.message);
    }
}

example();
```

## –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫

### –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è

#### 1. –û—à–∏–±–∫–∞ 422 "Validation Error"

**–ü—Ä–æ–±–ª–µ–º–∞**: –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏.

**–†–µ—à–µ–Ω–∏–µ**:
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ–ª–µ `title` –Ω–µ –ø—É—Å—Ç–æ–µ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç 1 –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤
- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ `priority` –∏–º–µ–µ—Ç –æ–¥–Ω–æ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏–π: "low", "medium", "high"
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã `due_date` (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å ISO 8601)

**–ü—Ä–∏–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞**:
```json
{
  "title": "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏",
  "description": "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ",
  "priority": "medium",
  "due_date": "2023-12-31T23:59:59Z"
}
```

#### 2. –û—à–∏–±–∫–∞ 404 "Todo not found"

**–ü—Ä–æ–±–ª–µ–º–∞**: –ó–∞–¥–∞—á–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.

**–†–µ—à–µ–Ω–∏–µ**:
- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π UUID –∑–∞–¥–∞—á–∏
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∑–∞–¥–∞—á–∞ –Ω–µ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `GET /api/todos` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞—á

#### 3. –û—à–∏–±–∫–∞ 400 "Todo with this title already exists"

**–ü—Ä–æ–±–ª–µ–º–∞**: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.

**–†–µ—à–µ–Ω–∏–µ**:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
- –ò–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π

#### 4. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è

**–ü—Ä–æ–±–ª–µ–º–∞**: –û—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞.

**–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –∏ —Ä–µ—à–µ–Ω–∏—è**:

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
python --version  # –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å 3.11+

# –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
pip install --upgrade -r requirements.txt

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
lsof -i :8000  # –ù–∞ Linux/Mac
netstat -an | grep :8000  # –ù–∞ Windows

# –ó–∞–ø—É—Å–∫ –Ω–∞ –¥—Ä—É–≥–æ–º –ø–æ—Ä—Ç—É
uvicorn main:app --port 8001
```

#### 5. –ú–µ–¥–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ API

**–ü—Ä–æ–±–ª–µ–º–∞**: API –æ—Ç–≤–µ—á–∞–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ.

**–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —Ä–µ—à–µ–Ω–∏—è**:

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
curl http://localhost:8000/health

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
curl -w "@curl-format.txt" http://localhost:8000/api/todos

# –§–∞–π–ª curl-format.txt:
#      time_namelookup:  %{time_namelookup}\n
#         time_connect:  %{time_connect}\n
#      time_appconnect:  %{time_appconnect}\n
#     time_pretransfer:  %{time_pretransfer}\n
#        time_redirect:  %{time_redirect}\n
#   time_starttransfer:  %{time_starttransfer}\n
#                     ----------\n
#           time_total:  %{time_total}\n
```

**–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è**:
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–æ–≤
- –î–æ–±–∞–≤—å—Ç–µ –∏–Ω–¥–µ–∫—Å—ã –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ë–î
- –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —á–∞—Å—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö

### –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞

#### –í–∫–ª—é—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

```bash
# –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –¥–æ–±–∞–≤—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
uvicorn main:app --log-level debug --access-log
```

#### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–¥–µ

```python
import logging

# –î–æ–±–∞–≤—å—Ç–µ –≤ main.py
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)
```

#### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö endpoints
curl http://localhost:8000/health
curl http://localhost:8000/
curl http://localhost:8000/api/todos

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
curl http://localhost:8000/docs
curl http://localhost:8000/redoc
```

### –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã

#### Q: –ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è?
A: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä `--port` –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:
```bash
uvicorn main:app --port 8080
```

#### Q: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–∏ API HTTPS?
A: –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTTP. –î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω –¥–µ–ø–ª–æ—è –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ reverse proxy (nginx/Apache) —Å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏.

#### Q: –ö–∞–∫ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ?
A: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ endpoint `DELETE /api/todos` –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏).

#### Q: –ï—Å—Ç—å –ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á?
A: –ù–µ—Ç –∂—ë—Å—Ç–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, –Ω–æ –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏. –î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.

#### Q: –ú–æ–∂–Ω–æ –ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å/—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏?
A: –í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ —Ç–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á –∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö.

## –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
todo-api/
‚îú‚îÄ‚îÄ main.py                 # –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI
‚îú‚îÄ‚îÄ requirements.txt        # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python
‚îú‚îÄ‚îÄ tests/                  # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ç–µ—Å—Ç–æ–≤
‚îÇ   ‚îú‚îÄ‚îÄ test_todo_api.py   # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
‚îÇ   ‚îî‚îÄ‚îÄ conftest.py        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è pytest
‚îú‚îÄ‚îÄ docs/                   # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
‚îú‚îÄ‚îÄ .gitignore             # Git ignore —Ñ–∞–π–ª
‚îú‚îÄ‚îÄ README.md              # –ë–∞–∑–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
‚îî‚îÄ‚îÄ Makefile               # –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á
```

### –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞

#### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π –≤ –º–æ–¥–µ–ª—å Todo

1. –û–±–Ω–æ–≤–∏—Ç–µ Pydantic –º–æ–¥–µ–ª–∏ –≤ `main.py`
2. –î–æ–±–∞–≤—å—Ç–µ –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π
3. –û–±–Ω–æ–≤–∏—Ç–µ —Ç–µ—Å—Ç—ã
4. –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é

#### –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

–î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å PostgreSQL –∏–ª–∏ MongoDB:

```python
# –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å SQLAlchemy
from sqlalchemy import create_database_url
from sqlalchemy.orm import sessionmaker

DATABASE_URL = "postgresql://user:password@localhost/tododb"
engine = create_engine(DATABASE_URL)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
```

#### –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏

```python
# –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å JWT
from fastapi.security import HTTPBearer
from jose import JWTError, jwt

security = HTTPBearer()

@app.get("/api/protected-todos")
async def get_user_todos(token: str = Depends(security)):
    # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    pass
```

### –î–µ–ø–ª–æ–π –≤ –ø—Ä–æ–¥–∞–∫—à–Ω

#### Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

```dockerfile
FROM python:3.11-slim

WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
```

#### Docker Compose

```yaml
version: '3.8'
services:
  todo-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENV=production
  
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - todo-api
```

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –º–µ—Ç—Ä–∏–∫–∏

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å:
- Prometheus –º–µ—Ç—Ä–∏–∫–∏
- Health checks
- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

### –£—á–∞—Å—Ç–∏–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ

1. –§–æ—Ä–∫–Ω–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
2. –°–æ–∑–¥–∞–π—Ç–µ –≤–µ—Ç–∫—É –¥–ª—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
3. –î–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç—ã –¥–ª—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç
5. –°–æ–∑–¥–∞–π—Ç–µ Pull Request

### –õ–∏—Ü–µ–Ω–∑–∏—è

–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π MIT.
